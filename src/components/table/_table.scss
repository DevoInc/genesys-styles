// --------------------------- TABLE - COMPONENTS --------------------------- //


.table {
  @import "./variables-table";

  $parent: &;

  width: 100%;


  // ELEMENTS - TABLE ------------------------------------------------------- //

  // Header - Element - Table

  &__header {
    border-bottom: solid $cmp-table-head-row-shape-border-size-md
      $cmp-table-head-row-color-background-after-base;
    background-color: $cmp-table-head-color-background;

    #{$parent}__cell {
      @include text-color(heading);
      text-align: left;
      font-weight: 700;

      &::before {
        content: unset;
      }
    }
  }

  // Body - Element - Table

  &__body {
    background-color: $cmp-table-body-color-background;

    #{$parent}__row {
      background-color: $cmp-table-row-color-background-odd-base;

      &:not(#{$parent}__row--selected):hover #{$parent}__cell--actions {
        opacity: 1;
      }

      &--selected {
        background-color: $cmp-table-row-color-background-odd-selected;
      }

      &--modified {
        background-color: $cmp-table-row-color-background-modified-blink;
      }

      &--highlighted {
        background-color: $cmp-table-row-color-background-even-highlighted;
      }
    }
  }

  // Row - Element - Table

  &__row {
    border-radius: $cmp-table-row-shape-border-radius-default;

    &--no-data-message {
      #{$parent}__cell {
        @include spacing(padding, all, sm, component);
        @include typography;
        @include text-color($color: weak);
      }

      #{$parent}--rows-draggable #{$parent}__body & {
        cursor: default !important;
        padding-left: 0 !important;

        &::after {
          content: unset !important;
        }
      }
    }

    &--dragging {
      @include elevation(draggable);
      @include spacing(padding, all, xs, component);
      pointer-events: none;
      position: fixed;
      background-color: $cmp-table-row-color-background-odd-base;

      &::before {
        @include text-color($color: weak);
        @include icon-font;
        content: $gi-row_drag_drop;
        position: relative;
        left: calc(map-deep-get($spacing-size-map, xs, component) * -1);
        font-size: 1.8rem;
        transition: all .3s ease;
      }

      &:is(:not(tr)) {
        @include flex(null, center);

        #{$parent}__cell {
          @include flex(null, center);
        }
      }
    }

    &--drag-origin #{$parent}__cell {
      opacity: .25;
    }
  }

  // Cell - Element - Table

  &__cell {
    @include typography($ignore-props: font-size);
    @include text-color;
    position: relative;
    font-size: $cmp-table-cell-wrapper-typo-font-size-md;

    &::before {
      @include pseudo-overlay;
      pointer-events: none;
    }

    &:first-child::before {
      border-top-left-radius: $cmp-table-row-shape-border-radius-default;
      border-bottom-left-radius: $cmp-table-row-shape-border-radius-default;
    }

    &:last-child::before {
      border-top-right-radius: $cmp-table-row-shape-border-radius-default;
      border-bottom-right-radius: $cmp-table-row-shape-border-radius-default;
    }

    #{$parent}__row:hover &::before {
      background-color: $cmp-table-cell-color-background-backdrop-hovered-strong;
    }

    &,
    &--align-ver-center {
      vertical-align: middle;
    }

    &--align-hor-center {
      text-align: center;
    }

    &--align-hor-right {
      text-align: right;
    }

    &--actions {
      text-align: right;

      #{$parent}__row:not(#{$parent}__row--selected) & {
        opacity: $cmp-table-cell-quick-actions-shape-opacity;
      }

      .icon-button {
        &:not(:first-child) {
          @include spacing(margin, left, xs, component);
        }

        &:not(:disabled):hover::before,
        &:not(:disabled).icon-button--hovered::before {
          background-color: transparent;
        }
      }
    }

    &--truncate {
      @include truncate;
    }

    @each $size in $table-cell-size-width-list {
      &--width-#{$size} {
        width: map-get($table-cell-size-width-map, $size);
      }

      &--min-width-#{$size} {
        min-width: map-get($table-cell-size-width-map, $size);
      }

      &--max-width-#{$size} {
        max-width: map-get($table-cell-size-width-map, $size);
      }
    }
  }

  &__drop-target {
    @include spacing(margin, ver, xs, component);
    height: .2rem;
    border-radius: $cmp-table-row-shape-border-radius-default;
    background-color: $alias-color-background-feedback-data-blue-stronger;
  }


  // MODIFIERS - TABLE ------------------------------------------------------ //

  // Density - Modifier - Table

  &,
  &--default {
    #{$parent}__cell {
      padding: $cmp-table-cell-space-padding-ver-default-base
        $cmp-table-cell-space-padding-hor-default;
    }
  }

  &--compact {
    #{$parent}__cell {
      padding: $cmp-table-cell-space-padding-ver-compact-base
        $cmp-table-cell-space-padding-hor-compact;
    }
  }

  &--comfortable {
    #{$parent}__cell {
      padding: $cmp-table-cell-space-padding-ver-comfortable-base
        $cmp-table-cell-space-padding-hor-comfortable;
    }
  }

  // Striped - Modifier - Table

  &--striped #{$parent}__row {
    &#{$parent}__row--odd,
    &:nth-child(odd) {
      background-color: $cmp-table-row-color-background-odd-base;
    }

    &#{$parent}__row--even,
    &:nth-child(even) {
      background-color: $cmp-table-row-color-background-even-base;
    }

    &--selected {
      &:nth-child(even) {
        background-color: $cmp-table-row-color-background-even-selected;
      }

      &:nth-child(odd) {
        background-color: $cmp-table-row-color-background-odd-selected;
      }
    }
  }

  // Rows bordered - Modifier - Table

  &--rows-bordered #{$parent}__row:not(:last-child) {
    border-bottom: $cmp-table-row-shape-border-size-after solid $cmp-table-row-color-background-after;
  }

  // Rows have fixed height - Modifier - Table

  &--rows-fixed-height {
    #{$parent}__row #{$parent}__cell {
      padding-top: 0;
      padding-bottom: 0;
    }

    &,
    &#{$parent}--default {
      #{$parent}__header {
        height: $cmp-table-head-size-height-default;
      }

      #{$parent}__row {
        height: $cmp-table-row-size-height-default-md;
      }
    }

    &#{$parent}--compact {
      #{$parent}__header {
        height: $cmp-table-head-size-height-compact;
      }

      #{$parent}__row {
        height: $cmp-table-row-size-height-compact-md;
      }
    }

    &#{$parent}--comfortable {
      #{$parent}__header {
        height: $cmp-table-head-size-height-comfortable;
      }

       #{$parent}__row {
        height: $cmp-table-row-size-height-comfortable-md;
      }
    }
  }

  // Rows draggable - Modifier - Table

  &--rows-draggable {
    $draggable-icon-width: .4rem;

    #{$parent}__header {
      padding-left: $draggable-icon-width;
    }

    #{$parent}__body #{$parent}__row {
      position: relative;
      padding-left: $draggable-icon-width;
      cursor: move;

      &::after {
        @include text-color($color: weak);
        @include icon-font;
        content: $gi-row_drag_drop;
        position: absolute;
        top: 50%;
        left: calc(#{$draggable-icon-width} * -1);
        transform: translateY(-50%);
        width: $draggable-icon-width;
        font-size: 1.8rem;
        visibility: hidden;
        opacity: 0;
        transition: all .3s ease;
      }

      &:hover::after {
        visibility: visible;
        opacity: 1;
      }
    }
  }

  // Flex - Modifier - Table

  &--flex {
    #{$parent}__header {
      @include flex(null, center);
    }

    #{$parent}__row {
      @include flex(null, center);
      position: relative;

      &::before {
        @include pseudo-overlay;
        border-radius: $cmp-table-row-shape-border-radius-default;
        pointer-events: none;
      }

      &:hover::before {
        background-color: $cmp-table-cell-color-background-backdrop-hovered-strong;
      }

      &:not(#{$parent}__row--selected):hover #{$parent}__cell--actions {
        opacity: 1;
      }

      &--align-ver {
        &-top {
          align-items: flex-start;
        }

        &-bottom {
          align-items: flex-end;
        }
      }

      &--selected {
        background-color: $cmp-table-row-color-background-odd-selected;
      }

      &--no-data-message {
        &::before {
          content: none;
        }

        #{$parent}__cell {
          @include spacing(padding, all, sm, component);
          width: 100%;
        }
      }
    }

    #{$parent}__cell {
      flex-shrink: 0;
      vertical-align: unset;

      &::before {
        content: unset;
      }

      &--grow {
        flex: 1;
      }

      &--align-ver-center {
        @include flex(null, center);
        vertical-align: unset;
      }

      &--actions {
        @include flex(null, center, flex-end);
        @include spacing($property: gap, $size: xs, $type: component);
        flex: 0 0 auto;
        margin-left: auto;
        text-align: inherit;

        .icon-button {
          margin: 0;
        }
      }
    }

    &#{$parent}--cells-grow #{$parent}__cell:not(#{$parent}__cell--actions) {
      flex: 1;
    }

    &#{$parent}--rows-draggable {
      #{$parent}__row {
        &::after {
          align-self: center;
          left: 0;
          top: unset;
          transform: unset;
        }
      }
    }
  }
}


// STICKY - TABLE ----------------------------------------------------------- //

.table-wrapper {
  &--sticky {
    @include scrollbars;
    @include height(auto, null, 100%);
    flex: 1;
    overflow-y: auto;

    .table__header {
      @include elevation(sticky-bottom);
      box-shadow: $cmp-table-head-elevation-box-shadow;
      z-index: 1;
      position: sticky;
      top: 0;
    }
  }
}
